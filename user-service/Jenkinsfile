pipeline {
    agent any

    environment {
        JWT_SECRET           = credentials('user-service-jwt-secret')
        DB_PASSWORD          = credentials('user-service-usersdb-password')
        GOOGLE_CLIENT_ID     = credentials('user-service-google-client-id')
        GOOGLE_CLIENT_SECRET = credentials('user-service-google-client-secret')
        RABBITMQ_PASSWORD    = credentials('user-service-rabbitmq-password')
        DOCKER_REGISTRY = "docker.io/naydin43"
        IMAGE_NAME = "${DOCKER_REGISTRY}/qs-user-service"
        DOCKER_PASSWORD = credentials('docker-hub-password')
        DOCKER_USERNAME = credentials('docker-hub-username')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build & Test') {
            steps {
                dir('user-service') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Prepare Configurations') {
            steps {
                dir('user-service') {
                    script {
                        sh '''
                            export DB_PASSWORD=${DB_PASSWORD}
                            export GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
                            export GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
                            export RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
                            export JWT_SECRET=${JWT_SECRET}
                            ls -a src/main/resources
                            envsubst < src/main/resources/application.yml > src/main/resources/application_final.yml
                            '''
                    }
                }
            }
        }


        stage('Check application.yml') {
            steps {
                script {
                    sh 'cat user-service/src/main/resources/application_final.yml'
                }
            }
        }


        stage('Build Docker Image & Push to Docker Hub') {
            steps {
                script {
                    sh '''
                        docker build -t ${IMAGE_NAME}:${BUILD_NUMBER} ./user-service
                        docker tag ${IMAGE_NAME}:${BUILD_NUMBER} ${IMAGE_NAME}:latest
                        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                        docker push ${IMAGE_NAME}:${BUILD_NUMBER}
                        docker push ${IMAGE_NAME}:latest
                    '''
                }
            }
        }

        stage('Test the container') {
            steps {
                script {
                    sh "docker run -d -e JWT_SECRET=${JWT_SECRET} ${IMAGE_NAME}:latest"
                }
            }
        }

       /* stage('Deploy') {
            steps {
                sh 'kubectl apply -f k8s/user-service-deployment.yml'
            }
        }
        */
    }

    post {
        success {
            echo 'User Service pipeline completed successfully!'
        }
        failure {
            echo 'An error occurred in the User Service pipeline!'
        }
    }
}
